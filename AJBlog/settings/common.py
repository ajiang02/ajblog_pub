"""
Django settings for AJBlog project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pure_pagination',
    'mdeditor',
    'haystack',
    'blog',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AJBlog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            # 全局的模板变量
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.views.global_templates_setting'
            ],
        },
    },
]

WSGI_APPLICATION = 'AJBlog.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# 为了能够让 Nginx 方便地处理这些静态文件的请求，指定静态文件的收集路径
STATIC_ROOT = BASE_DIR / 'static'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 分页设置
# https://github.com/jamespacileo/django-pure-pagination
PAGINATION_SETTINGS = {
    # 将要显示当前页的左右总页数
    'PAGE_RANGE_DISPLAYED': 3,
    # 将要显示的第一页和最后一页附近的页数
    'MARGIN_PAGES_DISPLAYED': 2,
    # 无效页数时显示第一页
    'SHOW_FIRST_PAGE_WHEN_INVALID': True,
}


# markdown 编辑器
# https://github.com/pylixm/django-mdeditor
X_FRAME_OPTIONS = 'SAMEORIGIN'
MEDIA_ROOT = BASE_DIR / 'uploads'
MEDIA_URL = '/media/'


# Haystack
# https://django-haystack.readthedocs.io/en/master/tutorial.html
HAYSTACK_CONNECTIONS = {
    'default': {
        # 配置 Haystack 的搜索引擎为 Whoosh
        'ENGINE': 'blog.whoosh_cn_backend.WhooshEngine',
        # 索引文件存放路径
        'PATH': BASE_DIR / 'whoosh_index',
    },
}
## 对搜索结果分页
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10
## 指定当文章更新的时候更新索引
HAYSTACK_SEARCH_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
